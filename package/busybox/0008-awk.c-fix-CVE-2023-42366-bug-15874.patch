From 88f8a046f27cb81ccc30d038465e963b8300cf1b Mon Sep 17 00:00:00 2001
From: Valery Ushakov <uwe@stderr.spb.ru>
Date: Wed, 24 Jan 2024 22:24:41 +0300
Subject: [PATCH] awk.c: fix CVE-2023-42366 (bug #15874)

Make sure we don't read past the end of the string in next_token()
when backslash is the last character in an (invalid) regexp.
a fix and issue reported in bugzilla

https://bugs.busybox.net/show_bug.cgi?id=15874

Upstream-Status: Submitted [http://lists.busybox.net/pipermail/busybox/2024-May/090766.html]

CVE: CVE-2023-42366
Signed-off-by: Khem Raj <raj.khem@gmail.com>
[Thomas: https://git.openembedded.org/openembedded-core/tree/meta/recipes-core/busybox/busybox/0001-awk.c-fix-CVE-2023-42366-bug-15874.patch?id=e0ff4813b1cf4df0d851c857d57fb88d7db51bdd]
Upstream: http://lists.busybox.net/pipermail/busybox/2024-May/090766.html
Signed-off-by: Thomas Petazzoni <thomas.petazzoni@bootlin.com>
---
 editors/awk.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/editors/awk.c b/editors/awk.c
index 64e752f4b..222e6298d 100644
--- a/editors/awk.c
+++ b/editors/awk.c
@@ -1234,9 +1234,11 @@ static uint32_t next_token(uint32_t expected)
 					s[-1] = bb_process_escape_sequence((const char **)&pp);
 					if (*p == '\\')
 						*s++ = '\\';
-					if (pp == p)
+					if (pp == p) {
+						if (*p == '\0')
+							syntax_error(EMSG_UNEXP_EOS);
 						*s++ = *p++;
-					else
+					} else
 						p = pp;
 				}
 			}
-- 
2.48.1

